allprojects  {
  apply plugin: "idea"

  group = "org.ngrinder"
  version = "3.5.0"

  idea {
    module {
      outputDir file("build/classes/main")
      testOutputDir file("build/classes/test")
    }
  }

  if (project.convention.findPlugin(JavaPluginConvention)) {
    // Change the output directory for the main and test source sets back to the old path
    sourceSets.main.java.outputDir = new File(buildDir, "classes/main")
    sourceSets.test.java.outputDir = new File(buildDir, "classes/test")
  }
}

subprojects {
  apply plugin: "java"
  apply plugin: "maven-publish"

  compileJava.options.encoding = "UTF-8"
  compileTestJava.options.encoding = "UTF-8"

  sourceCompatibility = 1.8
  targetCompatibility = 1.8

  ext {
    profile = project.hasProperty('profile') ? profile : 'development'
    slf4j_version = "1.7.28"
    spring_security_version = "5.3.4.RELEASE"
    spring_boot_version = "2.3.3.RELEASE"
    svnkit_version = "1.8.3-scm1"
    hibernate_version = "5.4.20.Final"
    hazelcast_version = "4.0.2"
    mockito_version = "2.23.4"
    handlebars_version = "4.0.5"
    jackson_version = "2.11.2"
  }

  repositories {
    mavenCentral()
    maven { url "http://repo.springsource.org/release" }
    maven { url "http://maven.scm-manager.org/nexus/content/repositories/releases" }
  }

  test {
    testLogging.showStandardStreams = true
  }

  task javadocJar(type: Jar) {
    from javadoc.destinationDir
    classifier "javadoc"
  }

  task sourceJar(type: Jar) {
    from sourceSets.main.allJava
    classifier "sources"
  }

  publishing {
    publications {
      nGrinerModules(MavenPublication) {
        from components.java
        artifact sourceJar
        artifact javadocJar
      }
    }
    repositories {
      maven {
        url = "file:../../ngrinder.maven.repo/releases/"
      }
    }
  }
}
